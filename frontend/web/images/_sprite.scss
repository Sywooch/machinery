// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arr-left-name: 'arr-left';
$arr-left-x: 46px;
$arr-left-y: 42px;
$arr-left-offset-x: -46px;
$arr-left-offset-y: -42px;
$arr-left-width: 10px;
$arr-left-height: 20px;
$arr-left-total-width: 80px;
$arr-left-total-height: 65px;
$arr-left-image: '../images/sprite.png';
$arr-left: (46px, 42px, -46px, -42px, 10px, 20px, 80px, 65px, '../images/sprite.png', 'arr-left', );
$arr-orange-bottom-name: 'arr-orange-bottom';
$arr-orange-bottom-x: 0px;
$arr-orange-bottom-y: 0px;
$arr-orange-bottom-offset-x: 0px;
$arr-orange-bottom-offset-y: 0px;
$arr-orange-bottom-width: 32px;
$arr-orange-bottom-height: 18px;
$arr-orange-bottom-total-width: 80px;
$arr-orange-bottom-total-height: 65px;
$arr-orange-bottom-image: '../images/sprite.png';
$arr-orange-bottom: (0px, 0px, 0px, 0px, 32px, 18px, 80px, 65px, '../images/sprite.png', 'arr-orange-bottom', );
$arr-right-name: 'arr-right';
$arr-right-x: 56px;
$arr-right-y: 42px;
$arr-right-offset-x: -56px;
$arr-right-offset-y: -42px;
$arr-right-width: 10px;
$arr-right-height: 20px;
$arr-right-total-width: 80px;
$arr-right-total-height: 65px;
$arr-right-image: '../images/sprite.png';
$arr-right: (56px, 42px, -56px, -42px, 10px, 20px, 80px, 65px, '../images/sprite.png', 'arr-right', );
$ic-fb-name: 'ic-fb';
$ic-fb-x: 0px;
$ic-fb-y: 18px;
$ic-fb-offset-x: 0px;
$ic-fb-offset-y: -18px;
$ic-fb-width: 24px;
$ic-fb-height: 24px;
$ic-fb-total-width: 80px;
$ic-fb-total-height: 65px;
$ic-fb-image: '../images/sprite.png';
$ic-fb: (0px, 18px, 0px, -18px, 24px, 24px, 80px, 65px, '../images/sprite.png', 'ic-fb', );
$ic-in-name: 'ic-in';
$ic-in-x: 0px;
$ic-in-y: 42px;
$ic-in-offset-x: 0px;
$ic-in-offset-y: -42px;
$ic-in-width: 23px;
$ic-in-height: 23px;
$ic-in-total-width: 80px;
$ic-in-total-height: 65px;
$ic-in-image: '../images/sprite.png';
$ic-in: (0px, 42px, 0px, -42px, 23px, 23px, 80px, 65px, '../images/sprite.png', 'ic-in', );
$ic-skype-name: 'ic-skype';
$ic-skype-x: 23px;
$ic-skype-y: 42px;
$ic-skype-offset-x: -23px;
$ic-skype-offset-y: -42px;
$ic-skype-width: 23px;
$ic-skype-height: 23px;
$ic-skype-total-width: 80px;
$ic-skype-total-height: 65px;
$ic-skype-image: '../images/sprite.png';
$ic-skype: (23px, 42px, -23px, -42px, 23px, 23px, 80px, 65px, '../images/sprite.png', 'ic-skype', );
$ic-tw-name: 'ic-tw';
$ic-tw-x: 32px;
$ic-tw-y: 0px;
$ic-tw-offset-x: -32px;
$ic-tw-offset-y: 0px;
$ic-tw-width: 24px;
$ic-tw-height: 24px;
$ic-tw-total-width: 80px;
$ic-tw-total-height: 65px;
$ic-tw-image: '../images/sprite.png';
$ic-tw: (32px, 0px, -32px, 0px, 24px, 24px, 80px, 65px, '../images/sprite.png', 'ic-tw', );
$icon-fb-name: 'icon-fb';
$icon-fb-x: 56px;
$icon-fb-y: 0px;
$icon-fb-offset-x: -56px;
$icon-fb-offset-y: 0px;
$icon-fb-width: 24px;
$icon-fb-height: 24px;
$icon-fb-total-width: 80px;
$icon-fb-total-height: 65px;
$icon-fb-image: '../images/sprite.png';
$icon-fb: (56px, 0px, -56px, 0px, 24px, 24px, 80px, 65px, '../images/sprite.png', 'icon-fb', );
$lang-de-name: 'lang-de';
$lang-de-x: 56px;
$lang-de-y: 24px;
$lang-de-offset-x: -56px;
$lang-de-offset-y: -24px;
$lang-de-width: 24px;
$lang-de-height: 18px;
$lang-de-total-width: 80px;
$lang-de-total-height: 65px;
$lang-de-image: '../images/sprite.png';
$lang-de: (56px, 24px, -56px, -24px, 24px, 18px, 80px, 65px, '../images/sprite.png', 'lang-de', );
$spritesheet-width: 80px;
$spritesheet-height: 65px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($arr-left, $arr-orange-bottom, $arr-right, $ic-fb, $ic-in, $ic-skype, $ic-tw, $icon-fb, $lang-de, );
$spritesheet: (80px, 65px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
