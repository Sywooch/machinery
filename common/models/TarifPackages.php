<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "tarif_packages".
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $price
 * @property integer $term
 * @property string $options
 */
class TarifPackages extends \yii\db\ActiveRecord
{
    const STATUS_NEW = 0;
    const STATUS_ACT = 1;

    private $_optionsPack;
    public $customOptions;

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \common\models\PackageOptionsBehavior::class,
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'tarif_packages';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'term_advert', 'quantity'], 'required'],
            [['description', 'sub_caption'], 'string'],
            [['price'], 'number'],
            [['term', 'weight', 'term_advert', 'quantity'], 'integer'],
            [['name', 'sub_caption'], 'string', 'max' => 255],
            [['status'], 'boolean'],
            ['optionsPack', 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'price' => Yii::t('app', 'Price'),
            'term' => Yii::t('app', 'Срок действия'),
            'weight' => 'Позиция в списке',
            'sub_caption' => 'Sub Caption',
            'status' => 'Active',
            'term_advert' => Yii::t('app', 'Ad validity period'),
            'quantity' => Yii::t('app', 'Number of ads'),
        ];
    }

    public function getOptionsPack(){
        return $this->hasMany(TarifOptions::className(), ['id'=>'option_id'])
            ->viaTable('{{%package_option}}', ['package_id'=>'id'])
            ->indexBy('id')
            ->orderBy(['weight'=>'asc']);
    }


    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
//        dd($this->_optionsPack, 1);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
            PackageOption::deleteAll(['package_id'=>$this->id]);
            if($_options = $this->_optionsPack){
                foreach ($_options as $opt){
                    $option = new PackageOption();
                    $option->package_id = $this->id;
                    $option->option_id  = $opt;
                    $option->save();
                }
            }
//        dd($this->_optionsPack, 0 );
//        dd($this->getOptionPack, 0);
//        dd($changedAttributes, 1);
    }

    /**
     * @param mixed $optionsPack
     */
    public function setOptionsPack($optionsPack)
    {
        $this->_optionsPack = $optionsPack;
    }

    public function arrayOptions($data){
        $out = [];
        if($data){
            foreach($data as $item){
                $out[] = $item->id;
            }
        }
        return $out;
    }
}
