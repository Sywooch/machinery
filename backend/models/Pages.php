<?php

namespace backend\models;

use common\helpers\ModelHelper;
use common\helpers\URLify;
use common\models\Alias;
use common\modules\taxonomy\validators\TaxonomyAttributeValidator;

/**
 * This is the model class for table "pages".
 *
 * @property integer $id
 * @property string $title
 * @property string $body
 */
class Pages extends \yii\db\ActiveRecord
{
    private $_urlalias;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'pages';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'lang'], 'required'],
            [['body', 'lang'], 'string'],
            [['title'], 'string', 'max' => 255],
            ['parent', 'integer'],
            //[['urlalias', 'alias'], 'safe'],
//            [['test', 'test2'], TaxonomyAttributeValidator::class, 'type' => 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'body' => 'Body',
        ];
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \common\modules\taxonomy\behaviors\TaxonomyBehavior::class,
            ],
            [
                'class' => \common\components\UrlBehavior::class,
            ]
        ];
    }

    public function getAlias()
    {
        return $this->hasOne(Alias::className(), ['entity_id' => 'id'])->where(['model' => 'Pages']);
    }

    public function urlPattern($model, Alias $alias)
    {
        $alias->url = 'pages/view';
        $alias->alias = URLify::url($model->title);
        return $alias;
    }

    public function beforeSave($insert)
    {
//        echo $this->isNewRecord ? 'yes' : 'no';
        $this->parent = $this->parent ? $this->parent : $this->id;
//        dd($this);
//        dd($this, 1);

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        $alias = Alias::find()->where(['entity_id'=>$this->id, 'model'=>'Pages'])->one() ?? new Alias();
        $alias->entity_id   = $this->id;
        $alias->model       = 'Pages';
        $alias->url         = 'pages/view?id='. $this->id;
        $alias->alias       = $this->_urlalias ? $this->_urlalias : URLify::url($this->title);
        $alias->save();
//        echo $this->_urlalias;
//        dd($changedAttributes, 1);
    }

    /**
     * @param mixed $alias
     */
    public function setUrlalias($urlalias)
    {
        $this->_urlalias = $urlalias;
    }

    /**
     * @return mixed
     */
    public function getUrlalias()
    {
        return $this->_urlalias;
    }
}
